[{"/Users/leilaboumediene/leReacteur/React/to-do-list/src/index.js":"1","/Users/leilaboumediene/leReacteur/React/to-do-list/src/App.js":"2","/Users/leilaboumediene/leReacteur/React/to-do-list/src/Task.js":"3","/Users/leilaboumediene/leReacteur/React/to-do-list/src/Footer.js":"4","/Users/leilaboumediene/leReacteur/React/to-do-list/src/Header.js":"5","/Users/leilaboumediene/leReacteur/React/to-do-list/src/Form.js":"6"},{"size":219,"mtime":1612619021255,"results":"7","hashOfConfig":"8"},{"size":2503,"mtime":1612823610799,"results":"9","hashOfConfig":"8"},{"size":969,"mtime":1612823103075,"results":"10","hashOfConfig":"8"},{"size":393,"mtime":1612822112274,"results":"11","hashOfConfig":"8"},{"size":260,"mtime":1612623651991,"results":"12","hashOfConfig":"8"},{"size":348,"mtime":1612823131418,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12e7rqx",{"filePath":"17","messages":"18","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leilaboumediene/leReacteur/React/to-do-list/src/index.js",[],["28","29"],"/Users/leilaboumediene/leReacteur/React/to-do-list/src/App.js",["30","31"],"import \"./App.css\";\nimport Header from \"./Header\";\nimport Task from \"./Task\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\n\nimport { useState, useEffect } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faList);\n\nfunction App() {\n  // state pour stocker ce qui est rentré dans l'input\n  const [input, setInput] = useState(\"\");\n  // state pour stocker un tableau de tâches\n  const [tasks, setTasks] = useState();\n\n  // fonction déclanchée lorsque l'on tape quelque chose dans l'input\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // fonction déclanchée lorsque l'on clique sur le bouton \"Add task\"\n  const handleSubmit = (e) => {\n    // empêcher le rafraîchissement de la page\n    e.preventDefault();\n    // si rien n'a été rentré dans l'input\n    if (!input) {\n      alert(\"Veuillez rentrer une nouvelle tâche\");\n    } else {\n      //  création d'une copie du tableau \"tasks\", pour pouvoir lui ajouter la nouvelle tâche\n      let tasksCopy = [...tasks];\n      // ajout de la nouvelle tâche dans la copie du tableau\n      tasksCopy.push({\n        // si la tâche rentrée (input est supérieure à 20 caractères, on ne prend que les 20 premiers et on ajoute'...')\n        // sinon, on ajoute la tâche rentrée en entier\n        title: input.lenght > 20 ? input.substring(0, 30) + \"...\" : input,\n        done: false,\n      });\n    }\n    // mise à jour du state \"taks\" avec le tableau à jour\n    setTasks(tasksCopy);\n    // remise à zéro de l'input\n    setInput(\"\");\n  };\n\n  //  fonction appelée lorsque l'on clique sur la poubelle\n  const handleClickCheck = (index) => {\n    // il faut supprimer l'élément cliqué du tableau \"tasks\"\n    let tasksCopy = [...tasks];\n    tasksCopy.splice(tasksCopy.indexOf(tasksCopy[index]), 1);\n    setTasks(tasksCopy);\n  };\n  const handleClickTrash = (index) => {\n    let tasksCopy = [...tasks];\n    tasksCopy.splice(tasksCopy.indexOf(tasksCopy[index]), 1);\n    setTasks(tasksCopy);\n  };\n  return (\n    <div className=\"body\">\n      <Header />\n      <div className=\"container\">\n        <Task\n          handleClickCheck={handleClickCheck}\n          handleClickTrash={handleClickTrash}\n          tasks={tasks}\n        />\n        <Form\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          input={input}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/leilaboumediene/leReacteur/React/to-do-list/src/Task.js",[],"/Users/leilaboumediene/leReacteur/React/to-do-list/src/Footer.js",[],"/Users/leilaboumediene/leReacteur/React/to-do-list/src/Header.js",[],"/Users/leilaboumediene/leReacteur/React/to-do-list/src/Form.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":20,"nodeType":"38","messageId":"39","endLine":7,"endColumn":29},{"ruleId":"40","severity":2,"message":"41","line":42,"column":14,"nodeType":"38","messageId":"42","endLine":42,"endColumn":23},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-undef","'tasksCopy' is not defined.","undef","no-global-assign","no-unsafe-negation"]